// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UnivaliMapas.Api.DbContexts;

#nullable disable

namespace UnivaliMapas.Migrations
{
    [DbContext(typeof(UnivaliContext))]
    [Migration("20240514001846_UserMigration")]
    partial class UserMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UnivaliMapas.Api.Entities.Bloco", b =>
                {
                    b.Property<int>("BlocoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BlocoID"));

                    b.Property<char>("LetraBloco")
                        .HasColumnType("character(1)");

                    b.HasKey("BlocoID");

                    b.ToTable("Blocos");

                    b.HasData(
                        new
                        {
                            BlocoID = 1,
                            LetraBloco = 'A'
                        },
                        new
                        {
                            BlocoID = 2,
                            LetraBloco = 'B'
                        },
                        new
                        {
                            BlocoID = 3,
                            LetraBloco = 'C'
                        });
                });

            modelBuilder.Entity("UnivaliMapas.Api.Entities.Sala", b =>
                {
                    b.Property<int>("SalaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SalaId"));

                    b.Property<int>("BlocoId")
                        .HasColumnType("integer");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("SalaId");

                    b.HasIndex("BlocoId");

                    b.ToTable("Salas");

                    b.HasData(
                        new
                        {
                            SalaId = 1,
                            BlocoId = 1,
                            Number = 101
                        },
                        new
                        {
                            SalaId = 2,
                            BlocoId = 1,
                            Number = 102
                        },
                        new
                        {
                            SalaId = 3,
                            BlocoId = 2,
                            Number = 103
                        },
                        new
                        {
                            SalaId = 4,
                            BlocoId = 2,
                            Number = 104
                        },
                        new
                        {
                            SalaId = 5,
                            BlocoId = 3,
                            Number = 105
                        },
                        new
                        {
                            SalaId = 6,
                            BlocoId = 3,
                            Number = 106
                        });
                });

            modelBuilder.Entity("UnivaliMapas.Api.Entities.Usuario", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("CodigoPessoa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CodigoPessoa = "7888888",
                            Cpf = "000.000.000-00",
                            Name = "Vinicius Setti",
                            Password = "5phLUbbFkT1Kzcr0uGJgdCRUjWtXPqvQPIGjNkv17w0="
                        },
                        new
                        {
                            UserId = 2,
                            CodigoPessoa = "7888888",
                            Cpf = "000.000.000-00",
                            Name = "Alisson Pokrywiecki",
                            Password = "5phLUbbFkT1Kzcr0uGJgdCRUjWtXPqvQPIGjNkv17w0="
                        });
                });

            modelBuilder.Entity("UnivaliMapas.Api.Entities.Sala", b =>
                {
                    b.HasOne("UnivaliMapas.Api.Entities.Bloco", "Bloco")
                        .WithMany("Salas")
                        .HasForeignKey("BlocoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bloco");
                });

            modelBuilder.Entity("UnivaliMapas.Api.Entities.Bloco", b =>
                {
                    b.Navigation("Salas");
                });
#pragma warning restore 612, 618
        }
    }
}
